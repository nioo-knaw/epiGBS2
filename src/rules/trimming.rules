rule pigz_merge:
	input:
		watson=expand("{out}/output_demultiplex/clone-stacks/{{sample}}-Crick.{{strand}}.fq.gz",out=config["output_dir"]),
		crick=expand("{out}/output_demultiplex/clone-stacks/{{sample}}-Watson.{{strand}}.fq.gz",out=config["output_dir"])
	output:
		merged=temp(expand("{tmp}/merged/{{sample}}.{{strand}}.fq.gz",tmp=config["tmpdir"]))
	threads: 1
	shell:
		"cat {input.watson} {input.crick} > {output.merged}"

rule cutadapt_adapter:
	input:
		R1=temp(expand("{tmp}/merged/{{sample}}.1.fq.gz",tmp=config["tmpdir"])),
		R2=temp(expand("{tmp}/merged/{{sample}}.2.fq.gz",tmp=config["tmpdir"]))
	output:
		txt=expand("{out}/log/{{sample}}_read-info.txt",out=config["output_dir"]),
		R1untrimmed=temp(expand("{tmp}/cutadapt_adapter/{{sample}}_untrimmed.1.fq.gz",tmp=config["tmpdir"])),
		R2untrimmed=temp(expand("{tmp}/cutadapt_adapter/{{sample}}_untrimmed.2.fq.gz",tmp=config["tmpdir"])),
		R1trimmed=temp(expand("{tmp}/cutadapt_adapter/{{sample}}_trimmed.1.fq.gz",tmp=config["tmpdir"])),
		R2trimmed=temp(expand("{tmp}/cutadapt_adapter/{{sample}}_trimmed.2.fq.gz",tmp=config["tmpdir"]))
	log:
		log=expand("{out}/log/{{sample}}_cutadapt_adapter.log",out=config["output_dir"])
	conda:
		"../env/cutadapt.yaml"
	threads: 1
	shell:
		"cutadapt -a AGATCGGAAGAGC -A AGATCGGAAGAGC -u 1 -U 1 -m 20 --info-file {output.txt} --untrimmed-output {output.R1untrimmed} --untrimmed-paired-output {output.R2untrimmed} -o {output.R1trimmed} -p {output.R2trimmed} {input.R1} {input.R2} 2>&1 | tee {log}"

rule cutadapt_untrimmed:
	input:
		R1untrimmed=temp(expand("{tmp}/cutadapt_adapter/{{sample}}_untrimmed.1.fq.gz",tmp=config["tmpdir"])),
		R2untrimmed=temp(expand("{tmp}/cutadapt_adapter/{{sample}}_untrimmed.2.fq.gz",tmp=config["tmpdir"]))
	output:
		txtuntrimmedfilt=expand("{out}/log/{{sample}}_untrimmed_filt_read-info.txt",out=config["output_dir"]),
		R1untrimmedfilt=temp(expand("{tmp}/cutadapt_adapter/{{sample}}_untrimmed_filt.1.fq.gz",tmp=config["tmpdir"])),
		R2untrimmedfilt=temp(expand("{tmp}/cutadapt_adapter/{{sample}}_untrimmed_filt.2.fq.gz",tmp=config["tmpdir"]))
	log:
		log=expand("{out}/log/{{sample}}_cutadapt_untrimmedfilt.log",out=config["output_dir"])
	conda:
		"../env/cutadapt.yaml"
	threads: 1
	shell:
		"cutadapt -m 20 --info-file {output.txtuntrimmedfilt} -o {output.R1untrimmedfilt} -p {output.R2untrimmedfilt} {input.R1untrimmed} {input.R2untrimmed} 2>&1 | tee {log}"

rule cutadapt_trimmed_three:
	input:
		R1trimmed=temp(expand("{tmp}/cutadapt_adapter/{{sample}}_trimmed.1.fq.gz",tmp=config["tmpdir"])),
		R2trimmed=temp(expand("{tmp}/cutadapt_adapter/{{sample}}_trimmed.2.fq.gz",tmp=config["tmpdir"]))
	output:
		txttrimmed_three=expand("{out}/log/{{sample}}_trimmed_three_read-info.txt",out=config["output_dir"]),
		R1trimmed_three=temp(expand("{tmp}/cutadapt_trimmed_three/{{sample}}_trimmed_three.1.fq.gz",tmp=config["tmpdir"])),
		R2trimmed_three=temp(expand("{tmp}/cutadapt_trimmed_three/{{sample}}_trimmed_three.2.fq.gz",tmp=config["tmpdir"]))
	log:
		log=expand("{out}/log/{{sample}}_cutadapt_trimmed_three.log",out=config["output_dir"])
	conda:
		"../env/cutadapt.yaml"
	threads: 1
	shell:
		"cutadapt -u -10 -U -10 -m 20 --info-file {output.txttrimmed_three} -o {output.R1trimmed_three} -p {output.R2trimmed_three} {input.R1trimmed} {input.R2trimmed} 2>&1 | tee {log}"

rule pigz_trimmed_merged:
	input:
		untrimmedfilt=temp(expand("{tmp}/cutadapt_adapter/{{sample}}_untrimmed_filt.{{strand}}.fq.gz",tmp=config["tmpdir"])),
		trimmed_three=temp(expand("{tmp}/cutadapt_trimmed_three/{{sample}}_trimmed_three.{{strand}}.fq.gz",tmp=config["tmpdir"]))
	output:
		trimmed_merged=expand("{out}/cutadapt/{{sample}}_trimmed_filt_merged.{{strand}}.fq.gz",out=config["output_dir"])
	threads: 1
	shell:
		"cat {input.untrimmedfilt} {input.trimmed_three} > {output.trimmed_merged}"