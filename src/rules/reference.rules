#prepares the genome for bismark
rule genome_prep_for_bismark_denovo_bismark:
    input:
        reference=expand("{path}/{genome}", path=config["ref_dir"],genome=config["genome"])
    output:
        preparedReference=expand("{path}/Bisulfite_Genome/CT_conversion/genome_mfa.CT_conversion.fa",path=config["ref_dir"])
    params:
        refDir=expand("{path}/",path=config["ref_dir"])
    conda:
        "../env/bismark.yaml"
    shell:
         '''
         bismark_genome_preparation {params.refDir}
         '''

#Align the trimmed reads to the denovo clusters
# --un outputs  unmapped reads to the output directory #Needed?
# --ambigious outputs ambigious writes the ambigiuos reads #Needed?
# --non_directional: sequencing library not in a specific direction
# --rg_tag --rg_id adds sample names to the bam file is necesarry for bisSNP snp calling

rule alignment_denovo_bismark:
    input:
        R1merged=expand("{out}/cutadapt/{{sample}}_trimmed_filt_merged.1.fq.gz",out=config["output_dir"]),
        R2merged=expand("{out}/cutadapt/{{sample}}_trimmed_filt_merged.2.fq.gz",out=config["output_dir"]),
        preparedReference=expand("{path}/Bisulfite_Genome/CT_conversion/genome_mfa.CT_conversion.fa",path=config["ref_dir"])
    output:
        alignment=expand("{out}/alignment/{{sample}}_trimmed_filt_merged.1_bismark_bt2_pe.bam",out=config["output_dir"])
    params:
        sample="{{sample}}",
        refDir=expand("{path}/",path=config["ref_dir"])
    conda:
        "../env/bismark.yaml"
    threads: 8
    shell:
        "bismark --un --ambiguous --genome {params.refDir} --non_directional -1 {input.R1merged} -2 {input.R2merged} -o output/alignment/ --rg_tag --rg_id {params.sample}"


# Call methylation sites with bismark
# -p paired end reads
# --CX output all C's independent of context (if not present only CG sites)
# --no_overlap scores overlapping methylation sites only using Read 1.
# --report Prints out a short methylation summary as well as the parameters used to run this script. 
# --bedGraph outputs a bedGraph file 
# --cytosine_report produces a genome-wide methylation report for all cytosines in the genome. (Not sure how this interacts with bedGraph)
# 
rule methylation_calling_denovo_bismark:
    input:
        alignment=expand("{out}/alignment/{{sample}}_trimmed_filt_merged.1_bismark_bt2_pe.bam",out=config["output_dir"]),
        refNN=expand("{path}/output_denovo/NNNNref/ref.fa",path=config["output_dir"]),
        preparedReference=expand("{path}/Bisulfite_Genome/CT_conversion/genome_mfa.CT_conversion.fa",path=config["ref_dir"])
    output:
        calling=expand("{out}/methylation_calling/{{sample}}_trimmed_filt_merged.1_bismark_bt2_pe.CX_report.txt",out=config["output_dir"]),
        coveragecompr=expand("{out}/methylation_calling/{{sample}}_trimmed_filt_merged.1_bismark_bt2_pe.bismark.cov.gz",out=config["output_dir"])
    params:
        refDir=expand("{path}/",path=config["ref_dir"])
    conda:
        "../env/bismark.yaml"
    threads: 2
    shell:
        "bismark_methylation_extractor -p --CX --no_overlap --report --bedGraph --cytosine_report --genome_folder {params.refDir} {input.alignment} -o output/methylation_calling/"

rule gunzip:
    input: 
        coveragecompr=expand("{out}/methylation_calling/{{sample}}_trimmed_filt_merged.1_bismark_bt2_pe.bismark.cov.gz",out=config["output_dir"])
    output:
        coverageuncompr=expand("{out}/methylation_calling/{{sample}}_bismark.cov.gz",out=config["output_dir"])
    threads: 1
    shell:
        "mv {input.coveragecompr} {output.coverageuncompr}"
